openapi: 3.0.0
info:
  title: Main Service - OpenAPI 1.0
  version: 1.0.0
servers:
  - url: http://localhost:8080/
tags:
  - name: Auto
    description: Auto API
  - name: Driver
    description: Driver API
paths:

  /api/v1/auto:
    post:
      operationId: createAuto
      summary: Create auto
      tags:
        - Auto
      requestBody:
        description: Auto request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AutoRequest'
        required: true
      responses:
        '201':
          description: CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoResponse'
        '400':
          description: Invalid request
        '404':
          description: Resource not found
        '405':
          description: Method is not available
        '500':
          description: Server error

    get:
      operationId: getAllAuto
      summary: Get all auto
      tags:
        - Auto
      parameters:
        - in: query
          name: page
          required: true
          schema:
            type: integer
            nullable: false
        - in: query
          name: size
          required: true
          schema:
            type: integer
            nullable: false
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageAutoResponse'
        '400':
          description: Invalid request
        '404':
          description: Resource not found
        '405':
          description: Method is not available
        '500':
          description: Server error

  /api/v1/auto/{id}:
    get:
      operationId: getAutoById
      summary: Create auto
      tags:
        - Auto
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoResponse'
        '400':
          description: Invalid request
        '404':
          description: Resource not found
        '405':
          description: Method is not available
        '500':
          description: Server error

    post:
      tags:
        - Auto
      operationId: updateAuto
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/AutoRequest'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        201:
          description: CREATED
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/AutoResponse'
    delete:
      tags:
        - Auto
      operationId: deleteAuto
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK

  /api/v1/driver:
    post:
      operationId: createDriver
      summary: Create driver
      tags:
        - Driver
      requestBody:
        description: Driver request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DriverRequest'
        required: true
      responses:
        '201':
          description: CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriverResponse'
        '400':
          description: Invalid request
        '404':
          description: Resource not found
        '405':
          description: Method is not available
        '500':
          description: Server error

  /api/v1/driver/{id}:
    get:
      operationId: getDriverById
      summary: Create driver
      tags:
        - Driver
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriverResponse'
        '400':
          description: Invalid request
        '404':
          description: Resource not found
        '405':
          description: Method is not available
        '500':
          description: Server error

    post:
      tags:
        - Driver
      operationId: updateDriver
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/DriverRequest'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        201:
          description: CREATED
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/DriverResponse'

    delete:
      tags:
        - Driver
      operationId: deleteDriver
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        200:
          description: OK

  /api/v1/driver/transaction/{id}:
    post:
      tags:
        - Driver
      operationId: transactionDriver
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/TransactionRequest'
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        201:
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TransactionResponse'

components:
  schemas:
    AutoRequest:
      type: object
      properties:
        vin:
          type: string
        stateNumber:
          type: string
        make:
          type: string
        age:
          type: number
        driver_id:
          type: integer
          format: int64

    AutoResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        vin:
          type: string
        stateNumber:
          type: string
        make:
          type: string
        age:
          type: number
        driver_id:
          type: integer
          format: int64

    PageAutoResponse:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/AutoResponse'
        currentPage:
          type: number
        allPages:
          type: number


    DriverRequest:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        middleName:
          type: string
        passport:
          $ref: '#/components/schemas/PassportRequest'

    PassportRequest:
      properties:
        serial:
          type: integer
          format: int32
        number:
          type: integer
          format: int32

    TransactionRequest:
      properties:
        sum:
          type: number
        isPlus:
          type: boolean

    TransactionResponse:
      properties:
        message:
          type: string

    DriverResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        middleName:
          type: string