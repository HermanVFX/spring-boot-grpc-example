apply plugin: "org.openapi.generator"

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation dep.swagger
    implementation dep.springWeb
    implementation dep.utils
    implementation dep.springDataCommons
    implementation dep.springOpenFeignCore

    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.0'
    implementation 'jakarta.annotation:jakarta.annotation-api:2.1.1'
    compileOnly 'jakarta.servlet:jakarta.servlet-api:6.0.0'

    runtimeOnly 'org.postgresql:postgresql'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

sourceSets {
    main {
        java {
            srcDir("$buildDir/generated/api/src/main/java")
        }
    }
}


tasks.compileJava {
    dependsOn(tasks.openApiGenerate)
}

openApiGenerate {
    inputSpec = "$project.rootDir/main-service-api/src/main/resources/openapi/api-docs.yml".toString()
    outputDir = "$buildDir/generated/api" as Object
    generateModelDocumentation = true
    generatorName = "spring"
    library = "spring-boot"
    apiPackage = "com.example.mainservice.controller"
    modelPackage = "com.example.mainservice.dto"
    invokerPackage = "com.example.mainservice.api"
    configOptions = [
            useSpringBoot3: "true",
            useTags: "true",
            java8: "false",
            dateLibrary: "java8",
            interfaceOnly: "true",
            skipDefaultInterface: "true",
            hideGenerationTimestamp: "true",
            serializableModel: "true",
            booleanGetterPrefix: "is",
            openApiNullable: "true",
    ]
}