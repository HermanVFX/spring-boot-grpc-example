apply plugin: "com.google.protobuf"

repositories {
    mavenCentral()
}

ext {
    protobuf_version = '3.21.2'
    grpc_version = '1.47.0'
    grpc_server_version = '2.14.0.RELEASE'
}

dependencies {
    implementation dep.swagger
    implementation dep.springWeb
    implementation dep.utils
    implementation dep.springDataCommons
    implementation dep.springOpenFeignCore
    implementation dep.mapStruct

    implementation "io.grpc:grpc-netty:${grpc_version}"
    implementation("net.devh:grpc-server-spring-boot-starter:${grpc_server_version}") {
        exclude group: 'io.grpc', module: 'grpc-netty-shaded'
    }

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'org.hibernate.javax.persistence:hibernate-jpa-2.1-api:1.0.2.Final'
    implementation 'javax.persistence:javax.persistence-api:2.2'


    implementation 'org.liquibase:liquibase-core'

    testImplementation 'org.projectlombok:lombok:1.18.26'

    runtimeOnly 'org.postgresql:postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "org.testcontainers:junit-jupiter"
    testImplementation "org.testcontainers:postgresql"
    testImplementation 'org.springframework.retry:spring-retry:1.2.5.RELEASE'



}

sourceSets {
    main {
        java {
            srcDirs("$buildDir/generated/source/proto/main/grpc")
            srcDirs("$buildDir/generated/source/proto/main/java")
        }
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protobuf_version}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpc_version}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}